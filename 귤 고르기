#include <string>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;
    
int solution(int k, vector<int> tangerine) {
    int answer = 0;
    map<int, int> mapset;
    
    for(int size : tangerine)
    {
        mapset[size]++;
    }
    
     vector<pair<int, int>> sortedVec(mapset.begin(), mapset.end());
    
    sort(sortedVec.begin(), sortedVec.end(), [](const pair<int, int>& a, const pair<int, int>& b) {
        return a.second > b.second; 
    });
    
    int sum = 0;
    for(const auto& [key, value] : sortedVec)
    {
        sum += value;
        answer++;
        if(sum >= k) break;
    }
    
    
    return answer;
}
